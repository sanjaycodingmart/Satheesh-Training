{"ast":null,"code":"var _global = typeof window === 'object' && window.window === window ? window : typeof self === 'object' && self.self === self ? self : typeof global === 'object' && global.global === global ? global : this;\n\nfunction bom(blob, opts) {\n  if (typeof opts === 'undefined') opts = {\n    autoBom: false\n  };else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object');\n    opts = {\n      autoBom: !opts\n    };\n  } // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], {\n      type: blob.type\n    });\n  }\n\n  return blob;\n}\n\nfunction download(url, name, opts) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.responseType = 'blob';\n\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts);\n  };\n\n  xhr.onerror = function () {\n    console.error('could not download file');\n  };\n\n  xhr.send();\n}\n\nfunction corsEnabled(url) {\n  var xhr = new XMLHttpRequest(); // use sync to avoid popup blocker\n\n  xhr.open('HEAD', url, false);\n\n  try {\n    xhr.send();\n  } catch (e) {}\n\n  return xhr.status >= 200 && xhr.status <= 299;\n} // `a.click()` doesn't work for all browsers (#465)\n\n\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'));\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents');\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n    node.dispatchEvent(evt);\n  }\n}\n\nvar saveAs = _global.saveAs || ( // probably in some web worker\ntypeof window !== 'object' || window !== _global ? function saveAs() {}\n/* noop */\n// Use download attribute first if possible (#193 Lumia mobile)\n: 'download' in HTMLAnchorElement.prototype ? function saveAs(blob, name, opts) {\n  var URL = _global.URL || _global.webkitURL;\n  var a = document.createElement('a');\n  name = name || blob.name || 'download';\n  a.download = name;\n  a.rel = 'noopener'; // tabnabbing\n  // TODO: detect chrome extensions & packaged apps\n  // a.target = '_blank'\n\n  if (typeof blob === 'string') {\n    // Support regular links\n    a.href = blob;\n\n    if (a.origin !== location.origin) {\n      corsEnabled(a.href) ? download(blob, name, opts) : click(a, a.target = '_blank');\n    } else {\n      click(a);\n    }\n  } else {\n    // Support blobs\n    a.href = URL.createObjectURL(blob);\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href);\n    }, 4E4); // 40s\n\n    setTimeout(function () {\n      click(a);\n    }, 0);\n  }\n} // Use msSaveOrOpenBlob as a second approach\n: 'msSaveOrOpenBlob' in navigator ? function saveAs(blob, name, opts) {\n  name = name || blob.name || 'download';\n\n  if (typeof blob === 'string') {\n    if (corsEnabled(blob)) {\n      download(blob, name, opts);\n    } else {\n      var a = document.createElement('a');\n      a.href = blob;\n      a.target = '_blank';\n      setTimeout(function () {\n        click(a);\n      });\n    }\n  } else {\n    navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n  }\n} // Fallback to using FileReader and a popup\n: function saveAs(blob, name, opts, popup) {\n  // Open a popup immediately do go around popup blocker\n  // Mostly only available on user interaction and the fileReader is async so...\n  popup = popup || open('', '_blank');\n\n  if (popup) {\n    popup.document.title = popup.document.body.innerText = 'downloading...';\n  }\n\n  if (typeof blob === 'string') return download(blob, name, opts);\n  var force = blob.type === 'application/octet-stream';\n\n  var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari;\n\n  var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n  if ((isChromeIOS || force && isSafari) && typeof FileReader !== 'undefined') {\n    // Safari doesn't allow downloading of blob URLs\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      var url = reader.result;\n      url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n      if (popup) popup.location.href = url;else location = url;\n      popup = null; // reverse-tabnabbing #460\n    };\n\n    reader.readAsDataURL(blob);\n  } else {\n    var URL = _global.URL || _global.webkitURL;\n    var url = URL.createObjectURL(blob);\n    if (popup) popup.location = url;else location.href = url;\n    popup = null; // reverse-tabnabbing #460\n\n    setTimeout(function () {\n      URL.revokeObjectURL(url);\n    }, 4E4); // 40s\n  }\n});\n_global.saveAs = saveAs.saveAs = saveAs;\nexport default saveAs;\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}","map":{"version":3,"sources":["/home/satheeshkumar/Desktop/myapp/src/download.js"],"names":["_global","window","self","global","bom","blob","opts","autoBom","console","warn","test","type","Blob","String","fromCharCode","download","url","name","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","HTMLAnchorElement","prototype","URL","webkitURL","a","createElement","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","popup","title","body","innerText","force","isSafari","HTMLElement","safari","isChromeIOS","userAgent","FileReader","reader","onloadend","result","replace","readAsDataURL","module","exports"],"mappings":"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","sourcesContent":["\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n    if (typeof blob === 'string') return download(blob, name, opts)\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n_global.saveAs = saveAs.saveAs = saveAs\nexport default saveAs\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"]},"metadata":{},"sourceType":"module"}